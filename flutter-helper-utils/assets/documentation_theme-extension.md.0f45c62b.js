import{_ as s,o as a,c as n,Q as e}from"./chunks/framework.ad306ecc.js";const g=JSON.parse('{"title":"MediaQuery Extension","description":"","frontmatter":{"title":"MediaQuery Extension"},"headers":[],"relativePath":"documentation/theme-extension.md","filePath":"documentation/theme-extension.md"}'),l={name:"documentation/theme-extension.md"},o=e(`<h1 id="theme-extension" tabindex="-1">Theme Extension <a class="header-anchor" href="#theme-extension" aria-label="Permalink to &quot;Theme Extension&quot;">​</a></h1><h2 id="themedata" tabindex="-1">themeData <a class="header-anchor" href="#themedata" aria-label="Permalink to &quot;themeData&quot;">​</a></h2><p>Quickly get the current <code>ThemeData</code> from the nearest <code>Theme</code> widget ancestor in the widget tree.</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> theme </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> context.themeData;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">final</span><span style="color:#24292E;"> theme </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> context.themeData;</span></span></code></pre></div><h2 id="txttheme" tabindex="-1">txtTheme <a class="header-anchor" href="#txttheme" aria-label="Permalink to &quot;txtTheme&quot;">​</a></h2><p>Effortlessly obtain the <code>TextTheme</code> for your context.</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> textTheme </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> context.txtTheme;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">final</span><span style="color:#24292E;"> textTheme </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> context.txtTheme;</span></span></code></pre></div><h2 id="brightness" tabindex="-1">brightness <a class="header-anchor" href="#brightness" aria-label="Permalink to &quot;brightness&quot;">​</a></h2><p>Determine the brightness setting of the system and the app theme. This is useful for toggling between light and dark modes.</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> themeBrightness </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> context.brightness;</span></span>
<span class="line"><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> systemBrightness </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> context.sysBrightness;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">final</span><span style="color:#24292E;"> themeBrightness </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> context.brightness;</span></span>
<span class="line"><span style="color:#D73A49;">final</span><span style="color:#24292E;"> systemBrightness </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> context.sysBrightness;</span></span></code></pre></div><h2 id="sysbrightness" tabindex="-1">sysBrightness <a class="header-anchor" href="#sysbrightness" aria-label="Permalink to &quot;sysBrightness&quot;">​</a></h2><p>Determine the brightness setting of the system and the app theme. This is useful for toggling between light and dark modes.</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> themeBrightness </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> context.brightness;</span></span>
<span class="line"><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> systemBrightness </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> context.sysBrightness;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">final</span><span style="color:#24292E;"> themeBrightness </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> context.brightness;</span></span>
<span class="line"><span style="color:#D73A49;">final</span><span style="color:#24292E;"> systemBrightness </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> context.sysBrightness;</span></span></code></pre></div><h2 id="isdark-and-islight" tabindex="-1">isDark and isLight <a class="header-anchor" href="#isdark-and-islight" aria-label="Permalink to &quot;isDark and isLight&quot;">​</a></h2><p>Convenient booleans to quickly check if the current theme is dark or light.</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> isDarkMode </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> context.isDark;</span></span>
<span class="line"><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> isLightMode </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> context.isLight;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">final</span><span style="color:#24292E;"> isDarkMode </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> context.isDark;</span></span>
<span class="line"><span style="color:#D73A49;">final</span><span style="color:#24292E;"> isLightMode </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> context.isLight;</span></span></code></pre></div><h2 id="example-usage" tabindex="-1">Example Usage <a class="header-anchor" href="#example-usage" aria-label="Permalink to &quot;Example Usage&quot;">​</a></h2><p>Here is an example that shows how to use these extensions to dynamically change the text color based on the current theme&#39;s brightness.</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">ThemedText</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">StatelessWidget</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">String</span><span style="color:#E1E4E8;"> text;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">ThemedText</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.text);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">@override</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">Widget</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">BuildContext</span><span style="color:#E1E4E8;"> context) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Access text theme and brightness</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> textTheme </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> context.txtTheme;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> isDarkMode </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> context.isDark;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Text</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">      text,</span></span>
<span class="line"><span style="color:#E1E4E8;">      style</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> textTheme.bodyText1</span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">copyWith</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">        color</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> isDarkMode </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Colors</span><span style="color:#E1E4E8;">.white </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Colors</span><span style="color:#E1E4E8;">.black,</span></span>
<span class="line"><span style="color:#E1E4E8;">      ),</span></span>
<span class="line"><span style="color:#E1E4E8;">    );</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ThemedText</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">StatelessWidget</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">String</span><span style="color:#24292E;"> text;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">ThemedText</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.text);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">@override</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">Widget</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">BuildContext</span><span style="color:#24292E;"> context) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Access text theme and brightness</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> textTheme </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> context.txtTheme;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">final</span><span style="color:#24292E;"> isDarkMode </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> context.isDark;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Text</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">      text,</span></span>
<span class="line"><span style="color:#24292E;">      style</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> textTheme.bodyText1</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">copyWith</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">        color</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> isDarkMode </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Colors</span><span style="color:#24292E;">.white </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Colors</span><span style="color:#24292E;">.black,</span></span>
<span class="line"><span style="color:#24292E;">      ),</span></span>
<span class="line"><span style="color:#24292E;">    );</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>Utilizing <code>ThemeExtension</code> from <code>flutter_helper_utils</code> will make your code cleaner and more maintainable while working with themes.</p>`,20),t=[o];function p(c,r,i,y,E,h){return a(),n("div",null,t)}const m=s(l,[["render",p]]);export{g as __pageData,m as default};
