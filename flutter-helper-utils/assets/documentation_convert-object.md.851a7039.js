import{_ as s,o,c as a,Q as n}from"./chunks/framework.edbfdbf1.js";const m=JSON.parse('{"title":"Converting Objects","description":"","frontmatter":{"title":"Converting Objects"},"headers":[],"relativePath":"documentation/convert-object.md","filePath":"documentation/convert-object.md"}'),e={name:"documentation/convert-object.md"},l=n(`<h1 id="converting-objects" tabindex="-1">Converting Objects <a class="header-anchor" href="#converting-objects" aria-label="Permalink to &quot;Converting Objects&quot;">​</a></h1><p>The <code>ConvertObject</code> class and the global methods help you convert objects between different types easily and reliably. They are handy when working with data from APIs, where you often encounter dynamic types. They offer simple and flexible methods to perform accurate type conversions.</p><h2 id="convertobject-methods" tabindex="-1">ConvertObject Methods <a class="header-anchor" href="#convertobject-methods" aria-label="Permalink to &quot;ConvertObject Methods&quot;">​</a></h2><p>The <code>ConvertObject</code> class provides a set of static methods to convert objects to various types, such as <code>int</code>, <code>double</code>, <code>bool</code>, <code>String</code>, <code>List</code>, <code>Set</code> and <code>Map</code>. Each method takes an object as the first parameter, and returns the converted value of the desired type. If the conversion fails, an exception is thrown.</p><p>The methods are:</p><ul><li><code>ConvertObject.toInt(dynamic)</code> or <code>tryToInt</code></li><li><code>ConvertObject.toDouble(dynamic)</code> or <code>tryToDouble</code></li><li><code>ConvertObject.toBool(dynamic)</code> or <code>tryToBool</code></li><li><code>ConvertObject.toString1(dynamic)</code> or <code>tryToString1</code></li><li><code>ConvertObject.toList&lt;T&gt;(dynamic)</code> or <code>tryToList</code></li><li><code>ConvertObject.toSet&lt;T&gt;(dynamic)</code> or <code>tryToSet</code></li><li><code>ConvertObject.toMap&lt;K, V&gt;(dynamic)</code> or <code>tryToMap</code></li></ul><h2 id="global-methods" tabindex="-1">Global Methods <a class="header-anchor" href="#global-methods" aria-label="Permalink to &quot;Global Methods&quot;">​</a></h2><p>For even more simplified usage, you can use global methods which uses the <code>ConvertObject</code>&#39;s static methods under the hood.</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;"> price </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">toInt</span><span style="color:#E1E4E8;">(map[</span><span style="color:#9ECBFF;">&#39;price&#39;</span><span style="color:#E1E4E8;">]);</span></span>
<span class="line"><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> strList </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">toList</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">String</span><span style="color:#E1E4E8;">&gt;(map[</span><span style="color:#9ECBFF;">&#39;score&#39;</span><span style="color:#E1E4E8;">]);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">int</span><span style="color:#24292E;"> price </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">toInt</span><span style="color:#24292E;">(map[</span><span style="color:#032F62;">&#39;price&#39;</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#D73A49;">final</span><span style="color:#24292E;"> strList </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">toList</span><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">String</span><span style="color:#24292E;">&gt;(map[</span><span style="color:#032F62;">&#39;score&#39;</span><span style="color:#24292E;">]);</span></span></code></pre></div><p><strong>NOTE:</strong> if you already have a method named <code>toList</code> in your code, it might conflict with our global one and Using the <code>ConvertObject.toList</code> method within your code should help avoid such naming conflicts.</p><h2 id="optional-parameters" tabindex="-1">Optional Parameters <a class="header-anchor" href="#optional-parameters" aria-label="Permalink to &quot;Optional Parameters&quot;">​</a></h2><p>Each method accepts two optional parameters: <code>listIndex</code> and <code>mapKey</code>. These parameters allow you to extract and convert specific values within a <code>List</code> or a <code>Map</code> object, respectively. For example, if you have a list of strings representing numbers, you can use the <code>listIndex</code> parameter to convert a particular element to an integer:</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">dynamic</span><span style="color:#E1E4E8;"> dynamic1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&#39;10&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;20&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;30&#39;</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;"> number </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">toInt</span><span style="color:#E1E4E8;">(dynamic1, listIndex</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 20</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">dynamic</span><span style="color:#24292E;"> dynamic1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;10&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;20&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;30&#39;</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">int</span><span style="color:#24292E;"> number </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">toInt</span><span style="color:#24292E;">(dynamic1, listIndex</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 20</span></span></code></pre></div><p>Similarly, if you have a map of strings representing different types of values, you can use the <code>mapKey</code> parameter to convert a particular value to a boolean:</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">dynamic</span><span style="color:#E1E4E8;"> dynamic2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> { </span><span style="color:#9ECBFF;">&#39;name&#39;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;John&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	                   </span><span style="color:#9ECBFF;">&#39;age&#39;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;30&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  	                 </span><span style="color:#9ECBFF;">&#39;isHuman&#39;</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;yes&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                  };</span></span>
<span class="line"><span style="color:#F97583;">final</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">bool</span><span style="color:#E1E4E8;"> isHuman </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">toBool</span><span style="color:#E1E4E8;">(dynamic2, mapKey</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;isHuman&#39;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">dynamic</span><span style="color:#24292E;"> dynamic2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> { </span><span style="color:#032F62;">&#39;name&#39;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;John&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	                   </span><span style="color:#032F62;">&#39;age&#39;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;30&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  	                 </span><span style="color:#032F62;">&#39;isHuman&#39;</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;yes&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                  };</span></span>
<span class="line"><span style="color:#D73A49;">final</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">bool</span><span style="color:#24292E;"> isHuman </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">toBool</span><span style="color:#24292E;">(dynamic2, mapKey</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;isHuman&#39;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// true</span></span></code></pre></div>`,15),t=[l];function p(c,r,i,y,d,E){return o(),a("div",null,t)}const u=s(e,[["render",p]]);export{m as __pageData,u as default};
